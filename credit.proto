syntax = "proto3";
package credit;
option go_package = "internal/grpc";

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  schemes: [HTTP, HTTPS];
  info: {
    version: "1.0";
  };
  security_definitions: {
    security: {
      key: "Authorization";
      value: {
        type: TYPE_API_KEY;
        in: IN_HEADER;
        name: "Authorization";
      }
    }
  };
  security: {
    security_requirement: {
      key: "Authorization";
      value: {};
    }
  };
};

message DeductCreditRequest {
  string apiId = 1;
  int64 amount = 2;
}

message DeductCreditResponse {
  string apiId = 1;
  int64 currentCredit = 2;
  int64 deductAmount = 3;
}

message AddCreditRequest {
  string apiId = 1;
  int64 amount = 2;
}

message AddCreditResponse {
  string apiId = 1;
  int64 currentCredit = 2;
  int64 addAmount = 3;
}

message GetCreditRequest {
  string email = 1;
  string apiId = 2;
}

message GetCreditResponse {
  string email = 1;
  string apiId = 2;
  int64 currentCredit = 3;
}

message CreditRequest {
  string email = 1;
  string apiId = 2;
  int64 amount = 3;
}

message CreditResponse {
  string email = 1;
  string apiId = 2;
  int64 currentCredit = 3;
  int64 addAmount = 4;
}

message DeleteCreditRequest {
  string apiId = 1;
  string email = 2;
}

message DeleteCreditResponse {
  bool success = 1;
}

service CreditManagement {
  // Create New Credit, this method will be called when: create user (uaa)
  rpc NewCredit(CreditRequest) returns (CreditResponse) {
    option (google.api.http) = {
      post: "/api/credit/v1/new"
      body: "*"
    };
  }

  // Update Credit For User
  rpc UpdateCredit(CreditRequest) returns (CreditResponse) {
    option (google.api.http) = {
      post: "/api/credit/v1/update"
      body: "*"
    };
  }

  // Get Credit
  rpc GetCredit(GetCreditRequest) returns (GetCreditResponse) {
    option (google.api.http) = {
      get: "/api/credit/v1/mine"
    };
  }

  // Deduct Credit Of A User Via api_id
  rpc Deduct(DeductCreditRequest) returns (DeductCreditResponse) {
    option (google.api.http) = {
      post: "/api/credit/v1/deduct"
      body: "*"
    };
  }

  // Add Credit, this method will add credit
  rpc AddCredit(AddCreditRequest) returns (AddCreditResponse) {
    option (google.api.http) = {
      post: "/api/credit/v1/add"
      body: "*"
    };
  }

  rpc DeleteCredit(DeleteCreditRequest) returns (DeleteCreditResponse) {
    option (google.api.http) = {
      post: "/api/credit/v1/delete"
      body: "*"
    };
  }

}